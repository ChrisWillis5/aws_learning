1.Create table :tran_fact
tran_id int, cust_id varchar(20),tran_date date,tran_ammount decimal(10,2), tran_type varchar(1)

tran_id : unique id of 6 character
cust_id : CA+ 4 integer
tran_date: is constant for one file
tran_ammount: number havin decimal(10,2)
tran_type :[C/D]
sate_cd :varchar(2)


102020,CA1001,2022-02-01,1200,C,CA
102021,CA1002,2022-02-01,700,C,NY
102022,CA1003,2022-02-01,500,C,NJ
102023,CA1004,2022-02-02,900,C,VA
102020,CA1001,2022-02-02,200,D,CA


2. Create static partition as dataset_date as varchar(10). Make sure tran_date < dataset_date-1
3. Add 7 partitions dataset_date

Data stats process:
1. create a table as table_states:
cols:
database_name varchar(20),
table_name varchar(50),
partition_key varchar(30),
rec_count int(10),
load_date date,
execution_key varchar(100)  >>> Partition col

execution_key is (database_name + "-"+table_name+"-"+partition_key)


2. After each load into tran_fact run the query to load data into table_states
query is : get the count from tran_fact an load into table_states






1. Total unique customer per day.
2. Total number of unique customer till date
3. Total transaction amount per customer per day ( if its C then add if D then subtract )
4. Find out duplicate transaction in total.
5. show the transaction which has debit but never credit before.

hive -f filename.hql
beeline -f file.hql --hivevar HDFSDIR=/tmp/folder
USE myhivedb;
-- a comment
LOAD DATA INPATH '${HDFSDIR}/browser.tsv' OVERWRITE INTO TABLE browser;
-- other queries